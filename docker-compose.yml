
# version: '3.1'
# services:

#   # ===================== #
#   #        MongoDB        #
#   # ===================== #
#   mongo:
#     image: mongo
#     volumes:
#       - ./mongo:/data/db
#     environment:
#       - MONGO_INITDB_ROOT_USERNAME=root
#       - MONGO_INITDB_ROOT_PASSWORD=root
#   mongo-express:
#     image: mongo-express
#     ports:
#       - '8091:8081'
#     environment:
#       - ME_CONFIG_MONGODB_ADMINUSERNAME=root
#       - ME_CONFIG_MONGODB_ADMINPASSWORD=root
#       - ME_CONFIG_MONGODB_SERVER=mongo
#       - ME_CONFIG_MONGODB_PORT=27017

#   # ===================== #
#   #        Zookeeper      #
#   # ===================== #

#   zookeeper:
#     hostname: myzookeeper
#     container_name: Zookeeper_container
#     image: 'bitnami/zookeeper:latest'
#     environment:
#       - ALLOW_ANONYMOUS_LOGIN=yes
#     networks:
#       - master_network
#     restart: always 


#   # ===================== #
#   #        Nifi           #
#   # ===================== #
  
#   nifi: 
#     hostname: nifi_work
#     container_name: nifi_container
#     image: 'apache/nifi:latest'
#     ports:
#       -'8091:8080'
#     networks:
#       - master_network
#     restart: on-failure
#     volumes:
#       - nifi-database_repository:/opt/nifi/nifi-current/database_repository
#       - nifi-flowfile_repository:/opt/nifi/nifi-current/flowfile_repository 
#       - nifi-content_repository:/opt/nifi/nifi-current/content_repository
#       - nifi-provenance_repository:/opt/nifi/nifi-current/provenance_repository 
#       - nifi-conf:/opt/nifi/nifi-current/conf
#       - nifi-state:/opt/nifi/nifi-current/state
#       - ./nifi/logs:/opt/nifi/nifi-current/logs
#       - ./nifi/jdbc:/opt/nifi/nifi-current/jdbc
#       - ./nifi/credentials:/opt/nifi/nifi-current/credentials
#     environments:
#       - NIFI_WEB_HTTP_PORT=8080
#       - NIFI_CLUSTER_IS_NODE=true 
#       - NIFI_CLUSTER_NODE_PROTOCOL_PORT =8082
#       - NIFI_ZK_CONNECT_STRING =myzookeeper:2181
#       - NIFI_ELECTION_MAX_WAIT=30 sec 
#       - NIFI_SENSITIVE_PROPS_KEY='12345678901234567890A'
#     healthcheck:
#       test: ["CMD", "curl","-f","http://mynifi:8080/nifi/"]
#       interval: 30s
#       timeout: 20s
#       retries: 3

#   # ===================== #
#   #        Nifi Registry  #
#   # ===================== #
#     registry:
#       hostname : myregistry
#       container_name : registry_container
#       image: 'apache/nifi-registry:latest'
#       restart: on-failure
#       ports:
#         -'18080:18080'
#       environment:
#         - LOG_LEVEL=INFO
#         - NIFI_REGISTRY_DB_DIR=/opt/nifi-registry/nifi-registry-current/database
#         - NIFI_REGISTRY_FLOW_PROVIDER=file
#         - NIFI_REGISTRY_FLOW_STORAGE_DIR=/opt/nifi-registry/nifi-registry-current/flow_storage        
#       volumes:
#         - ./nifi_registry/database:/opt/nifi-registry/nifi-registry-current/database
#         - ./nifi_registry/flow_storage:/opt/nifi-registry/nifi-registry-current/flow_storage
#       networks:
#         -master_network
#       healthcheck:
#         test : ["CMD", "curl", "-f", "http://myregistry:18080/nifi-registry/"]
#         interval: 30s
#         timeout: 20s
#         retries: 3 

#   # ===================== #
#   #        Postgres       #
#   # ===================== #        

#   postgres:
#     hostname : postgres
#     container_name : postgres_container_1
#     image: 'postgres:latest'
#     environment:
#       POSTGRES_USER : 'root'
#       POSTGRES_PASS : 'root'
#       PGDATA : /data/postgres
#     volumes:
#       - postgres:/data/postgres
#     ports:
#       - '5432:5432'
#     networks:
#       - master_network
#     restart:
#       on-failure
#     healthcheck:
#       test: ['CMD',"pg_isready"]
#       interval: 30s
#       timeout: 20s
#       retries: 3 

#   pgadmin: 
#     hostname: pg_admin_web
#     container_name: pg_admin_web
#     image: 'dpage/pgadmin4:latest'
#     environment:
#       PGADMIN_DEFAULT_EMAIL: 'root'
#       PGADMIN_DEFAULT_PASSWORD: 'root'
#       PGADMIN_CONFIG_SERVER_MODE: 'False'
#     volumes:
#       -pgadmin:/var/lib/pgadmin
#     networks:
#       - master_network
#     restart: on-failure
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://mypgadmin:80/misc/ping"]
#       interval: 30s
#       timeout: 20s
#       retries: 3

# volumes: 
#   nifi-database_repository:
#   nifi-flowfile_repository: 
#   nifi-content_repository:
#   nifi-provenance_repository:
#   nifi-conf:
#   nifi-state:
#   postgres:
#   pgadmin:

# networks:
#   master_network:
#     driver: bridge 


version: '3.1'
services:

  # ===================== #
  #        MongoDB        #
  # ===================== #
  mongo:
    image: mongo
    volumes:
      - ./mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root

  mongo-express:
    image: mongo-express
    ports:
      - 8110:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=root
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017

  # ===================== #
  #        Zookeeper      #
  # ===================== #

  zookeeper:
    hostname: myzookeeper
    container_name: Zookeeper_container
    image: 'bitnami/zookeeper:latest'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - master_network
    restart: always

  # ===================== #
  #        Nifi           #
  # ===================== #

  nifi:
    hostname: nifi_work
    container_name: nifi_container
    image: 'apache/nifi:latest'
    ports:
      - 8091:8080
    networks:
      - master_network
    volumes:
      - nifi-database_repository:/opt/nifi/nifi-current/database_repository
      - nifi-flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi-content_repository:/opt/nifi/nifi-current/content_repository
      - nifi-provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi-conf:/opt/nifi/nifi-current/conf
      - nifi-state:/opt/nifi/nifi-current/state
      - ./nifi/logs:/opt/nifi/nifi-current/logs
      - ./nifi/jdbc:/opt/nifi/nifi-current/jdbc
      - ./nifi/credentials:/opt/nifi/nifi-current/credentials
    environment:
      - NIFI_WEB_HTTP_PORT=8080
      - NIFI_CLUSTER_IS_NODE=true
      - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
      - NIFI_ZK_CONNECT_STRING=myzookeeper:2181
      - NIFI_ELECTION_MAX_WAIT=30 sec
      - NIFI_SENSITIVE_PROPS_KEY='12345678901234567890A'
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://nifi_work:8080/nifi/"]
      interval: 30s
      timeout: 20s
      retries: 3

  # ===================== #
  #        Nifi Registry  #
  # ===================== #

  registry:
    hostname: myregistry
    container_name: registry_container
    image: 'apache/nifi-registry:latest'
    restart: on-failure
    ports:
      - 18080:18080
    environment:
      - LOG_LEVEL=INFO
      - NIFI_REGISTRY_DB_DIR=/opt/nifi-registry/nifi-registry-current/database
      - NIFI_REGISTRY_FLOW_PROVIDER=file
      - NIFI_REGISTRY_FLOW_STORAGE_DIR=/opt/nifi-registry/nifi-registry-current/flow_storage
    volumes:
      - ./nifi_registry/database:/opt/nifi-registry/nifi-registry-current/database
      - ./nifi_registry/flow_storage:/opt/nifi-registry/nifi-registry-current/flow_storage
    networks:
      - master_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://myregistry:18080/nifi-registry/"]
      interval: 30s
      timeout: 20s
      retries: 3

  # ===================== #
  #        Postgres       #
  # ===================== #

  postgres:
    hostname: postgres
    container_name: postgres_container_1
    image: postgres:13
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=ny_taxi
    volumes:
      - "./postgres:/var/lib/postgresql/data:rw"
    ports:
      - 5432:5432
    networks:
      - master_network
    restart: on-failure
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 30s
      timeout: 20s
      retries: 3

  pgadmin:
    hostname: pg_admin_web
    container_name: pg_admin_web
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - master_network
    ports:
      - 5050:80
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://pg_admin_web:80/misc/ping"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  nifi-database_repository:
  nifi-flowfile_repository:
  nifi-content_repository:
  nifi-provenance_repository:
  nifi-conf:
  nifi-state:
  postgres:
  pgadmin:

networks:
  master_network:
    driver: bridge
