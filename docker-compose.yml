version: "3"

services:
#   # ===================== #
#   #        zookeeper       #
#   # ===================== #
  zookeeper:
    hostname: myzookeeper
    container_name: zk_con
    image: 'bitnami/zookeeper:3.7.0'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - master
    restart: always
#   # ===================== #
#   #        nifi       #
#   # ===================== #
  nifi:
    image: apache/nifi:1.14.0
    hostname: mynifi
    container_name: nifi_con
    ports:
      - 8091:8080
    networks:
      - master
    volumes:
      - nifi-database_repository:/opt/nifi/nifi-current/database_repository
      - nifi-flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi-content_repository:/opt/nifi/nifi-current/content_repository
      - nifi-provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi-conf:/opt/nifi/nifi-current/conf
      - nifi-state:/opt/nifi/nifi-current/state
      - ./nifi/logs:/opt/nifi/nifi-current/logs
      - ./nifi/jdbc:/opt/nifi/nifi-current/jdbc
      - ./nifi/credentials:/opt/nifi/nifi-current/credentials
    environment:
      - NIFI_WEB_HTTP_PORT=8080
      - NIFI_CLUSTER_IS_NODE=true
      - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
      - NIFI_ZK_CONNECT_STRING=myzookeeper:2181
      - NIFI_ELECTION_MAX_WAIT=30 sec
      - NIFI_SENSITIVE_PROPS_KEY='12345678901234567890A'
      - LC_ALL=C.UTF-8
      - LANG=C.UTF-8
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://mynifi:8080/nifi/"]
      interval: 30s
      timeout: 20s
      retries: 3
#   # ===================== #
#   #        registry       #
#   # ===================== #
  registry:
    hostname: myregistry
    container_name: registry_con
    image: 'apache/nifi-registry:1.15.0'
    restart: on-failure
    ports:
      - 18080:18080
    environment:
      - LOG_LEVEL=INFO
      - NIFI_REGISTRY_DB_DIR=/opt/nifi-registry/nifi-registry-current/database
      - NIFI_REGISTRY_FLOW_PROVIDER=file
      - NIFI_REGISTRY_FLOW_STORAGE_DIR=/opt/nifi-registry/nifi-registry-current/flow_storage
    volumes:
      - ./nifi_registry/database:/opt/nifi-registry/nifi-registry-current/database
      - ./nifi_registry/flow_storage:/opt/nifi-registry/nifi-registry-current/flow_storage
    networks:
      - master
    healthcheck:
      test: ["CMD", "curl", "-f", "http://myregistry:18080/nifi-registry/"]
      interval: 30s
      timeout: 20s
      retries: 3
#   # ===================== #
#   #        Postgres       #
#   # ===================== #
  postgres:
    hostname: postgres 
    container_name: postgres_con
    image: 'postgres:14-bullseye'
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - PGDATA=/data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - 5432:5432
    networks:
      - master
    restart: on-failure
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 20s
      retries: 3
#   # ===================== #
#   #        pgadmin       #
#   # ===================== #

  pgadmin:
    hostname: mypgadmin
    container_name: pgadmin_con
    image: 'dpage/pgadmin4:6.1'
    environment:
      - PGADMIN_DEFAULT_EMAIL=root@root.org
      - PGADMIN_DEFAULT_PASSWORD=root
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - master
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://mypgadmin:80/misc/ping"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  nifi-database_repository:
  nifi-flowfile_repository:
  nifi-content_repository:
  nifi-provenance_repository:
  nifi-state:
  nifi-conf:
  postgres:
  pgadmin:

networks:
  master:
    driver: bridge
